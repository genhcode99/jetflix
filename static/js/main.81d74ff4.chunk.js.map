{"version":3,"sources":["assets/이순신.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Video.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","slice","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","console","log","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","onChange","value","SearchContainer","event","preventDefault","searchByTerm","target","HEADER","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","TapContainer","VideoContainer","MovieSlider","youtubeKey","src","width","height","allow","allowfullscreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","frameborder","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","LogoContainer","TitleCompanies","Companies","img","DetailPresenter","result","logoPath","original_title","original_name","backdrop_path","substring","runtime","episode_run_time","genres","genre","index","overview","Video","videos","key","path","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","request","production_companies","company","logo_path","arrayPath","filter","Router","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81d74ff4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/이순신.d9918674.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL :\"https://api.themoviedb.org/3/\",\n  params : {\n    api_key : \"713f43841ac1c4234f72f0a5d3cd1172\",\n    language : \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying : () => api.get(\"movie/now_playing\"),\n  upcoming : () => api.get(\"movie/upcoming\"),\n  popular : () => api.get(\"movie/popular\"),\n  movieDetail : (id) => api.get(`movie/${id}`, {\n    params : {\n      append_to_response : \"videos\"\n    }\n  }),\n  search : (term) => api.get(\"search/movie\",{\n    params : {\n      query : encodeURIComponent(term)\n    }\n  })\n};\n\nexport const tvApi = {\n  topRated : () => api.get(\"tv/top_rated\"),\n  popular : () => api.get(\"tv/popular\"),\n  airingToday : () => api.get(\"tv/airing_today\"),\n  showDetail : (id) => api.get(`tv/${id}`, {\n    params : {\n      append_to_response : \"videos\"\n    }\n  }),\n  search : (term) => api.get(\"search/tv\",{\n    params : {\n      query : encodeURIComponent(term)\n    }\n  })\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\nfont-size: 14px;\nfont-weight: 600;\n\n`;\n\nconst Grid = styled.div`\nmargin-top: 25px;\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, 125px);\ngrid-gap: 25px;\n\n`;\n\nconst Section = ({title, children}) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title : PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n<Container>\n  <span role=\"img\" aria-label=\"Loading\"> ⏰ </span> \n</Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\nconst Text = styled.span`\n  color: ${props => props.color};\n  `;\n\nconst Message = ({text, color}) => (\n  <Container>\n    <Text color={color}>\n      {text}\n    </Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text : PropTypes.string.isRequired,\n  color : PropTypes.string.isRequired\n\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  margin-bottom: 5px;\n  &:hover{\n    ${Image}{\n      opacity: 0.3;\n    }\n    ${Rating}{\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(225, 225, 225, .5);\n`;\n\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/이순신.png\").default}/>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length>18 ? title.slice(0,18)+\"...\" : title }</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id : PropTypes.number.isRequired,\n  imageUrl : PropTypes.string,\n  title : PropTypes.string.isRequired,\n  rating : PropTypes.number,\n  year : PropTypes.string,\n  isMovie : PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\n\nconst HomePresenter = ({nowPlaying, upcoming, popular, error, loading}) => (\n  <>\n  <Helmet><title>Movies | Jetflix</title></Helmet>\n  {loading ? <Loader />  : \n  <Container>\n    {\n      nowPlaying && nowPlaying.length > 0 && (\n      <Section title=\"Now Playing\">\n        {nowPlaying.map(movie => \n          <Poster \n            key={movie.id}\n            id={movie.id}\n            imageUrl={movie.poster_path}\n            title={movie.title}\n            rating={movie.vote_average}\n            year={movie.release_date && movie.release_date.slice(0,4)}\n            isMovie={true}\n          />\n        )}\n      </Section>\n    )}\n\n\n    {\n      upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie => \n            <Poster \n            key={movie.id}\n            id={movie.id}\n            imageUrl={movie.poster_path}\n            title={movie.title}\n            rating={movie.vote_average}\n            year={movie.release_date && movie.release_date.slice(0,4)}\n            isMovie={true}\n            />\n          )}\n        </Section>\n    )}\n\n\n    {\n    popular && popular.length > 0 && (\n      <Section title=\"Popular Movies\">\n        {popular.map(movie => \n          <Poster \n          key={movie.id}\n          id={movie.id}\n          imageUrl={movie.poster_path}\n          title={movie.title}\n          rating={movie.vote_average}\n          year={movie.release_date && movie.release_date.slice(0,4)}\n          isMovie={true}\n          />\n        )}\n      </Section>\n    )}\n\n\n    { error && <Message text={error} color=\"e74c3c\"/> }\n  </Container>\n  }\n  </>\n\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying : PropTypes.array,\n  upcoming : PropTypes.array,\n  popular : PropTypes.array,\n  error : PropTypes.string,\n  loading : PropTypes.bool.isRequired\n}\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport { moviesApi } from \"../../api\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying : null,\n    upcoming : null,\n    popular : null,\n    error : null,\n    loading : true,\n  };\n\n\n  async componentDidMount () {\n\n    try {\n      const { data : { results : nowPlaying } } = await moviesApi.nowPlaying();\n      const { data : { results : upcoming } } = await moviesApi.upcoming();\n      const { data : { results : popular } } = await moviesApi.popular();\n\n      this.setState({ nowPlaying, upcoming, popular })\n      \n    } catch {\n      this.setState({ error : \"Can't find Movie information.\" });\n      \n    } finally {\n      this.setState({\n        loading : false,\n      });\n    }\n\n  }\n\n  render () {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n    <HomePresenter \n      nowPlaying={nowPlaying} \n      upcoming={upcoming} \n      popular={popular}\n      error={error}\n      loading={loading}\n    />);\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"../../Components/Section\"\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n  <Helmet><title>Shows | Jetflix</title></Helmet>\n  {\n  loading ? <Loader /> : \n  <Container>\n    {\n    topRated && topRated.length > 0 && (\n    <Section title=\"Top Rated Shows\">\n      {topRated.map(show =>\n         <Poster \n         key={show.id}\n         id={show.id}\n         imageUrl={show.poster_path}\n         title={show.name}\n         rating={show.vote_average}\n         year={show.first_air_date && show.first_air_date.slice(0,4)}\n         />\n      )}\n    </Section>\n    )}\n\n    {\n    popular && popular.length > 0 && (\n    <Section title=\"Popular Shows\">\n      {popular.map(show =>\n        <Poster \n        key={show.id}\n        id={show.id}\n        imageUrl={show.poster_path}\n        title={show.name}\n        rating={show.vote_average}\n        year={show.first_air_date && show.first_air_date.slice(0,4)}\n        />\n      )}\n    </Section>\n    )}\n\n    {\n    airingToday && airingToday.length > 0 && (\n    <Section title=\"Airing Today\">\n      {airingToday.map(show => \n        <Poster \n        key={show.id}\n        id={show.id}\n        imageUrl={show.poster_path}\n        title={show.name}\n        rating={show.vote_average}\n        year={show.first_air_date && show.first_air_date.slice(0,4)}\n        />\n      )}\n    </Section>\n    )}\n    { error && <Message text={error} color=\"e74c3c\"/> }\n  </Container>\n  }\n  </>\n);\nTVPresenter.propTypes = {\n  topRated : PropTypes.array,\n  popular : PropTypes.array,\n  airingToday : PropTypes.array,\n  error : PropTypes.bool,\n  loading : PropTypes.string.isRequired\n}\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer;","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component{\n  state = {\n    topRated : null,\n    popular : null,\n    airingToday : null,\n    error : null,\n    loading : true\n  };\n\n  async componentDidMount () {\n    try {\n      const  { data : { results : topRated } } = await tvApi.topRated();\n      const  { data : { results : popular } } = await tvApi.popular();\n      const  { data : { results : airingToday } } = await tvApi.airingToday();\n\n      this.setState({ topRated, popular, airingToday })\n\n    } catch {\n      this.setState({ error : \"Can't find TV information.\"})\n    } finally {\n      this.setState({ loading : false })\n    }\n  }\n\n\n  render () {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n      topRated = {topRated}\n      popular = {popular}\n      airingToday = {airingToday}\n      error = {error}\n      loading = {loading}\n      />\n    );\n  }\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Loader from \"../../Components/Loader\"\nimport Section from \"../../Components/Section\"\nimport Message from \"../../Components/Message\"\nimport Poster from \"../../Components/Poster\"\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\n\nconst SearchPresenter = ({ \n    movieResults, \n    tvResults, \n    searchTerm, \n    error, \n    loading, \n    handleSubmit, \n    updateTerm \n  }) => (\n    <>\n    <Helmet><title>Search | Jetflix</title></Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows...\" onChange={updateTerm} value={searchTerm}/>\n      </Form>\n      {loading ? <Loader /> : \n      <>\n        {\n        movieResults && movieResults.length > 0 && \n          <Section title=\"Movie Results\">\n            {movieResults.map( movie =>\n              <Poster \n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.title}\n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.slice(0,4)}\n              isMovie={true}\n              />\n            )}\n          </Section>\n        }\n        {\n        tvResults && tvResults.length > 0 && \n          <Section title=\"TV Show Results\">\n            {tvResults.map( show =>\n              <Poster \n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.slice(0,4)}\n              />\n            )}\n          </Section>\n        }\n        { error && <Message text={error} color=\"e74c3c\"/> }\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 &&\n          <Message text=\"Nothing Found\" color=\"#bdc3c7\"/>\n          }\n      </>\n      }\n    </Container>\n    </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults : PropTypes.array,\n  tvResults : PropTypes.array,\n  searchTerm : PropTypes.string,\n  error : PropTypes.string,\n  loading : PropTypes.bool.isRequired,\n  handleSubmit : PropTypes.func.isRequired,\n  updateTerm : PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component{\n  state = {\n    movieResults : null,\n    tvResults : null,\n    searchTerm : \"\",\n    error : null,\n    loading : false\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\"){\n      this.searchByTerm()\n    }\n  };\n\n  updateTerm = (event) => {\n    const { target: { value } } = event;\n    this.setState({ searchTerm : value });\n    console.log(value);\n  };\n\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading : true })\n    try {\n      const { data : { results : movieResults }} = await moviesApi.search(searchTerm);\n      const { data : { results : tvResults }} = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults});\n    } catch {\n      this.setState({ error: \"Can't find results\" })\n    } finally {\n      this.setState({ loading : false })\n    }\n  };\n\n  render () {\n    const {movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults = {movieResults}\n        tvResults = {tvResults}\n        searchTerm = {searchTerm}\n        error = {error}\n        loading = {loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n};","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\n\n//--------------------< Styles >--------------------\nconst HEADER = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: 20, 20, 20, 0.8;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, .8);\n`;\n\nconst List = styled.ul`\n  display: flex; \n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n  transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n//--------------------< Component >--------------------\nconst Header = ({location:{pathname}}) => (\n  <HEADER>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </HEADER>\n)\n\nexport default withRouter(Header)","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 50%;\n`;\n\nconst TapContainer = styled.div`\n  padding-bottom: 56.25%;\n  position: relative;\n`;\n\nconst VideoContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n`;\n\nconst MovieSlider = ({youtubeKey}) => {\n  \n\n  return (\n  <Container>    \n    <TapContainer>\n      <VideoContainer>\n        { youtubeKey &&\n          <iframe \n          src={`http://www.youtube.com/embed/${youtubeKey}`} \n          width=\"100%\" \n          height=\"100%\"\n          allow=\"\n            accelerometer; \n            autoplay; \n            clipboard-write; \n            encrypted-media; \n            gyroscope; \n            picture-in-picture\"\n          allowfullscreen=\"allowfullscreen\"\n          mozallowfullscreen=\"mozallowfullscreen\" \n          msallowfullscreen=\"msallowfullscreen\" \n          oallowfullscreen=\"oallowfullscreen\" \n          webkitallowfullscreen=\"webkitallowfullscreen\"\n          frameborder=\"0\">\n        </iframe>\n        }\n      </VideoContainer>\n    </TapContainer>\n  </Container>\n  )\n};\n\nMovieSlider.propTypes = {\n  youtubeKey : PropTypes.string\n}\n\n\nexport default MovieSlider;\n","import React , { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Video from \"../../Components/Video\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: .7;\n  line-height: 1.5;\n  width: 50%;\n  margin-bottom: 20px;\n`;\n\nconst LogoContainer = styled.div`\n  margin-top: 10px;\n  display: grid;\n  padding: 10px;\n  font-size: 14px;\n  border-radius: 10px;\n  background-color: rgba(225,225,225, .3);\n  grid-template-columns: repeat(auto-fill, 100px);\n  grid-template-rows: repeat(auto-fill, 100px);\n  gap: 30px;\n  width: 50%;\n`;\n\nconst TitleCompanies =styled.h3`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 800;\n  color: black;\n  width: 100px;\n  height: 100px;\n`;\n\nconst Companies =styled.img`\n  object-fit: contain;\n  width: 100px;\n  height: 100px;\n`;\n\n\nclass DetailPresenter extends React.Component {\n  render(){\n    const { result, logoPath, error, loading } =this.props\n    return(\n      <>\n      <Helmet><title>Loading | Jetflix</title></Helmet>\n      {loading ? \n        (\n          <Loader />\n        )  \n        : \n        ( \n          <Container>\n            <Helmet><title>{ result.original_title? result.original_title : result.original_name } | Jetflix</title></Helmet>\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n            <Content>\n              <Cover bgImage={result.poster_path ?\n                `https://image.tmdb.org/t/p/original${result.poster_path}`\n                :require(\"../../assets/이순신.png\") } \n              />\n              <Data>\n                <Title>{ result.original_title ? result.original_title : result.original_name }</Title>\n                <ItemContainer>\n                  <Item>{ result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4) }</Item>\n                  <Divider> • </Divider>\n                  <Item>{ result.runtime ? result.runtime : result.episode_run_time[0] } min</Item>\n                  <Divider> • </Divider>\n                  <Item>{result.genres &&\n                    result.genres.map((genre, index) => index === result.genres.length -1 ? genre.name : `${genre.name}/`)}</Item>\n                </ItemContainer>\n                <Overview>{ result.overview }</Overview>\n                <Video \n                  youtubeKey={result.videos.results[0] ? result.videos.results[0].key : null}\n                  />\n                <LogoContainer>\n                  <TitleCompanies>Production Companies</TitleCompanies>\n                  {logoPath && logoPath.length >0 && logoPath.map((path)=> <Companies src={`https://image.tmdb.org/t/p/w200${path}`}/>)}\n                </LogoContainer>\n              </Data>\n            </Content>\n          </Container>\n        )}\n        </>\n    )\n  }\n};\n\nDetailPresenter.propTypes = {\n  result : PropTypes.object,\n  error : PropTypes.string,\n  loading : PropTypes.bool.isRequired\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { moviesApi, tvApi } from \"../../api\"\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor (props) {\n    super(props);\n    const { location : { pathname }} = props;\n    this.state = {\n      result : null,\n      logoPath : null,\n      error : null,\n      loading : true,\n      isMovie: pathname.includes(\"/movie\")\n    };\n  };\n\n  async componentDidMount () {\n    const { id } = this.props.match.params;\n    const { push } = this.props.history;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if(isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        const request = await moviesApi.movieDetail(parsedId);\n        result = request.data;\n      } else {\n        const request = await tvApi.showDetail(parsedId);\n        result = request.data;\n      }\n      this.setState({ error : \"Can't find anything.\" })\n    } finally {\n      this.setState({ loading : false, result});\n    }\n    const arrayPath = await result.production_companies.map((company)=>company.logo_path);\n    const logoPath = await arrayPath.filter((path) => path !== null);\n    this.setState({logoPath});\n  }\n\n\n  render () {\n    const {result, logoPath, error, loading} = this.state;\n    return (\n    <DetailPresenter \n      result={result} \n      error={error}\n      loading={loading}\n      logoPath={logoPath}\n    />);\n  }\n}","import React from \"react\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\"\nimport Home from \"../Routes/Home\"\nimport TV from \"../Routes/TV\"\nimport Search from \"../Routes/Search\"\nimport Header from \"../Components/Header\"\nimport Detail from \"../Routes/Detail\"\n\n\n\nconst Router = () => ( \n  <BrowserRouter>\n    <>\n      <Header/>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </BrowserRouter>\n)\n\nexport default Router;","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\n\nconst globalStyles = createGlobalStyle`\n  ${reset};\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body {\n    font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 12px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n  }\n`;\n\nexport default globalStyles;","import React , { Component } from \"react\";\nimport Router from \"../Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render () {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\n\nReactDOM.render(<App />,document.getElementById(\"root\"));"],"sourceRoot":""}